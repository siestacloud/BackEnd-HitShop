package repository

import (
	"fmt"
	"hitshop/internal/config"
	"log"

	"gorm.io/driver/postgres"
	"gorm.io/gorm"
)

var (
	DB *gorm.DB

	clientsTable                       = "clients"                                // –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
	tAccountsTable                     = "telegram_accounts"                      // –∞–∫–∫–∞—É–Ω—Ç—ã —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—ã–µ –≤–µ–¥–µ—Ç—Å—è –≤—Å—è —Ä–∞–±–æ—Ç–∞
	tAccountsAdditionalAttributesTable = "telegram_account_additional_attributes" // –¥–æ–ø –∏–Ω—Ñ–∞ –æ–± –∞–∫–∫–∞—É—Ç–∞—Ö
	tUntrustSessionsTable              = "telegram_untrust_sessions"              // –Ω–µ–¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏
	tTrustSessionsTable                = "telegram_trust_sessions"                // –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏ (—Å–æ–∑–¥–∞—é—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–µ–¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö)
	tAppsTable                         = "telegram_apps"                          // –¥–∞–Ω–Ω—ã–µ –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–ª–∏–µ–Ω—Ç–æ–≤
	tGroupsTable                       = "telegram_groups"                        // –≥—Ä—É–ø–ø—ã —Ç–µ–ª–µ–≥—Ä–∞–º –ø–æ –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–±–æ—Ç–∞—é—Ç –∞–∫–∫–∞—É–Ω—Ç—ã
	tUsersTable                        = "telegram_users"                         // —Ü–µ–ª–µ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Ç–µ–ª–µ–≥–∏
	tGroupsUsersTable                  = "telegram_groups_users"                  // —Å–≤—è–∑—É—é—â–∞—è —Ç–∞–±–ª–∏—Ü–∞ (–≥—Ä—É–ø–ø—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –º–Ω–æ–≥–∏–µ –∫–æ –º–Ω–æ–≥–∏–º)
)

func ConnectDB(config *config.Cfg) {
	var err error
	dsn := fmt.Sprintf("host=%s user=%s password=%s dbname=%s port=%s sslmode=disable TimeZone=Europe/Moscow",
		config.DBHost,
		config.DBUserName,
		config.DBUserPassword,
		config.DBName,
		config.DBPort,
	)

	DB, err = gorm.Open(postgres.Open(dsn), &gorm.Config{})
	if err != nil {
		log.Fatal("Failed to connect to the Database")
	}
	fmt.Println("üöÄ Connected Successfully to the Database")
}
